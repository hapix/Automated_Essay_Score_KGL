{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":71485,"databundleVersionId":8059942,"sourceType":"competition"}],"dockerImageVersionId":30684,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\nimport re","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:48:23.369859Z","iopub.execute_input":"2024-04-18T08:48:23.370870Z","iopub.status.idle":"2024-04-18T08:48:23.378152Z","shell.execute_reply.started":"2024-04-18T08:48:23.370834Z","shell.execute_reply":"2024-04-18T08:48:23.376386Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"train = pd.read_csv(\"/kaggle/input/learning-agency-lab-automated-essay-scoring-2/train.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:48:28.155335Z","iopub.execute_input":"2024-04-18T08:48:28.156131Z","iopub.status.idle":"2024-04-18T08:48:28.591090Z","shell.execute_reply.started":"2024-04-18T08:48:28.156084Z","shell.execute_reply":"2024-04-18T08:48:28.589754Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"len(train)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"sample1 = train['full_text'][1]\nsample1","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:35:52.279501Z","iopub.execute_input":"2024-04-18T08:35:52.279929Z","iopub.status.idle":"2024-04-18T08:35:52.288835Z","shell.execute_reply.started":"2024-04-18T08:35:52.279896Z","shell.execute_reply":"2024-04-18T08:35:52.287461Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"'I am a scientist at NASA that is discussing the \"face\" on mars. I will be explaining how the \"face\" is a land form. By sharing my information about this isue i will tell you just that.\\n\\nFirst off, how could it be a martions drawing. There is no plant life on mars as of rite now that we know of, which means so far as we know it is not possible for any type of life. That explains how it could not be made by martians. Also why and how would a martion build a face so big. It just does not make any since that a martian did this.\\n\\nNext, why it is a landform. There are many landforms that are weird here in America, and there is also landforms all around the whole Earth. Many of them look like something we can relate to like a snake a turtle a human... So if there are landforms on earth dont you think landforms are on mars to? Of course! why not? It\\'s just unique that the landform on Mars looks like a human face. Also if there was martians and they were trying to get our attention dont you think we would have saw one by now?\\n\\nFinaly, why you should listen to me. You should listen to me because i am a member of NASA and i\\'ve been dealing with all of this stuff that were talking about and people who say martians did this have no relation with NASA and have never worked with anything to relate to this landform. One last thing is that everyone working at NASA says the same thing i say, that the \"face\" is just a landform.\\n\\nTo sum all this up the \"face\" on mars is a landform but others would like to beleive it\\'s a martian sculpture. Which every one that works at NASA says it\\'s a landform and they are all the ones working on the planet and taking pictures.'"},"metadata":{}}]},{"cell_type":"code","source":"def removeHTML(x):\n    html=re.compile(r'<.*?>')\n    return html.sub(r'',x)\ndef dataPreprocessing(x):\n    # 将单词转化为小写\n    # Convert words to lowercase\n    x = x.lower()\n    # Remove HTML\n    # 移除html\n    x = removeHTML(x)\n    # 删除以@作为首字母的字符串\n    # Delete strings starting with @\n    x = re.sub(\"@\\w+\", '',x)\n    # 删除数字\n    # Delete Numbers\n    x = re.sub(\"'\\d+\", '',x)\n    x = re.sub(\"\\d+\", '',x)\n    # 删除网址\n    # Delete URL\n    x = re.sub(\"http\\w+\", '',x)\n    # 将连续空白符替换为一个空格字符\n    # Replace consecutive empty spaces with a single space character\n    x = re.sub(r\"\\s+\", \" \", x)\n    # 替换连续的句号和逗号为一个\n    # Replace consecutive commas and periods with one comma and period character\n    x = re.sub(r\"\\.+\", \".\", x)\n    x = re.sub(r\"\\,+\", \",\", x)\n    # 去除开头结尾的空白符\n    # Remove empty characters at the beginning and end\n    x = x.strip()\n    return x","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"* Maybe cheking the level of the grammer could also help us.\n* Sentiment analysis.\n* Check the coherence and clarity.\n* Language style.\n* Spelling correction.","metadata":{}},{"cell_type":"code","source":"pip install happytransformer","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from happytransformer import HappyTextToText, TTSettings\n\nhappy_tt = HappyTextToText(\"T5\", \"vennify/t5-base-grammar-correction\")\n\nargs = TTSettings(num_beams=5, min_length=1)\n\n# Add the prefix \"grammar: \" before each input \n# result = happy_tt.generate_text(\"grammar: This sentences has bads grammar.\", args=args)\n\n# print(result.text) # This sentence has bad grammar.\n","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:35:58.576350Z","iopub.execute_input":"2024-04-18T08:35:58.577265Z","iopub.status.idle":"2024-04-18T08:36:28.156463Z","shell.execute_reply.started":"2024-04-18T08:35:58.577227Z","shell.execute_reply":"2024-04-18T08:36:28.155142Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stderr","text":"2024-04-18 08:36:09.187935: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-04-18 08:36:09.188084: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-04-18 08:36:09.415885: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/1.42k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6eac577dcbc44e819aafdb64c0c368d8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"pytorch_model.bin:   0%|          | 0.00/892M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a8a0cd7bcd7746f28bc3f3958c8ce60f"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()\n  return self.fget.__get__(instance, owner)()\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/1.92k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d1ba2ade9f904c459a3f20d0d7f3da2d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"spiece.model:   0%|          | 0.00/792k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4b4177907e8047bea94bc08c515ddeed"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.39M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"79d8f5a0a5ed4e0d829e5a3320dad915"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"special_tokens_map.json:   0%|          | 0.00/1.79k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a180b77ad8e54047a0b69e3b0462cbd7"}},"metadata":{}}]},{"cell_type":"code","source":"sampletext = sample1.replace('\\n\\n', ' ')\nimport nltk\nnltk.download('punkt')  # Download the necessary tokenizer data\n\nfrom nltk.tokenize import sent_tokenize\n\ntext = \"This is a sample text. It contains multiple sentences. We want to split it into sentences.\"\n\nsentences = sent_tokenize(sampletext)\n\nprint(sentences)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:48:54.242686Z","iopub.execute_input":"2024-04-18T08:48:54.243118Z","iopub.status.idle":"2024-04-18T08:48:54.252914Z","shell.execute_reply.started":"2024-04-18T08:48:54.243087Z","shell.execute_reply":"2024-04-18T08:48:54.251374Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n['I am a scientist at NASA that is discussing the \"face\" on mars.', 'I will be explaining how the \"face\" is a land form.', 'By sharing my information about this isue i will tell you just that.', 'First off, how could it be a martions drawing.', 'There is no plant life on mars as of rite now that we know of, which means so far as we know it is not possible for any type of life.', 'That explains how it could not be made by martians.', 'Also why and how would a martion build a face so big.', 'It just does not make any since that a martian did this.', 'Next, why it is a landform.', 'There are many landforms that are weird here in America, and there is also landforms all around the whole Earth.', 'Many of them look like something we can relate to like a snake a turtle a human...', 'So if there are landforms on earth dont you think landforms are on mars to?', 'Of course!', 'why not?', \"It's just unique that the landform on Mars looks like a human face.\", 'Also if there was martians and they were trying to get our attention dont you think we would have saw one by now?', 'Finaly, why you should listen to me.', \"You should listen to me because i am a member of NASA and i've been dealing with all of this stuff that were talking about and people who say martians did this have no relation with NASA and have never worked with anything to relate to this landform.\", 'One last thing is that everyone working at NASA says the same thing i say, that the \"face\" is just a landform.', 'To sum all this up the \"face\" on mars is a landform but others would like to beleive it\\'s a martian sculpture.', \"Which every one that works at NASA says it's a landform and they are all the ones working on the planet and taking pictures.\"]\n","output_type":"stream"}]},{"cell_type":"code","source":"text1 = sentences[0]\nresult = happy_tt.generate_text(\"grammar: \" + text1, args=args)\ntext2 = result.text\nprint(result.text) # This sentence has has bad grammar.","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:36:44.743281Z","iopub.execute_input":"2024-04-18T08:36:44.744056Z","iopub.status.idle":"2024-04-18T08:36:46.385385Z","shell.execute_reply.started":"2024-04-18T08:36:44.744021Z","shell.execute_reply":"2024-04-18T08:36:46.383955Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"I am a scientist at NASA that is discussing the \"face\" on Mars.\n","output_type":"stream"}]},{"cell_type":"code","source":"from nltk.tokenize import word_tokenize\n\ntext1_tokenized = word_tokenize(text1)\ntext1_tokenized","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:36:51.934165Z","iopub.execute_input":"2024-04-18T08:36:51.934584Z","iopub.status.idle":"2024-04-18T08:36:51.943940Z","shell.execute_reply.started":"2024-04-18T08:36:51.934552Z","shell.execute_reply":"2024-04-18T08:36:51.942731Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"['I',\n 'am',\n 'a',\n 'scientist',\n 'at',\n 'NASA',\n 'that',\n 'is',\n 'discussing',\n 'the',\n '``',\n 'face',\n \"''\",\n 'on',\n 'mars',\n '.']"},"metadata":{}}]},{"cell_type":"markdown","source":"# We should make difference between mistaks in Grammar, spelling, and the punctuation.","metadata":{}},{"cell_type":"code","source":"from collections import Counter\n\n\n\n\ndef diff(string1, string2):\n    lst1 = string1.split(' ')\n    lst2 =  string2.split(' ')\n    counter1 = Counter(lst1)\n    counter2 = Counter(lst2)\n    diff_counter =  counter1- counter2\n#     print(type(diff_counter))\n    listofwords  = list(diff_counter.elements())\n    return listofwords, len(listofwords)\n    \n\n\nnumber_of_mistake = 0\nfor x in sentences:\n#     print(\"Original:\", x)\n    result = happy_tt.generate_text(\"grammar: \" + x, args=args)\n    corrected_text = result.text\n#     print(\"Corrected:\", corrected_text)\n    \n    # Calculating the difference\n    a,differ = diff(x, corrected_text)\n    number_of_mistake += differ\n#     print(\"Words changed:\", differ)\n#     print(a)\nprint('00000000000000000000000000000000000000000000000000000000000')\nprint(number_of_mistake)\n\n#     with open('corrections_and_differences.txt', 'w') as file:\n#         for x in sentences:\n#             file.write(f\"Original: {x}\\n\")\n#             result = happy_tt.generate_text(\"grammar: \" + x, args=args)  # Simulated method call\n#             corrected_text = result.text\n#             file.write(f\"Corrected: {corrected_text}\\n\")\n\n#             # Calculating the difference\n#             words_changed, differ = diff(x, corrected_text)\n#             file.write(f\"Words changed: {differ}\\n\")\n#             file.write(f\"Changed words list: {', '.join(words_changed)}\\n\\n\")","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:43:47.101081Z","iopub.execute_input":"2024-04-18T08:43:47.101465Z","iopub.status.idle":"2024-04-18T08:44:23.620107Z","shell.execute_reply.started":"2024-04-18T08:43:47.101436Z","shell.execute_reply":"2024-04-18T08:44:23.618546Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"Original: I am a scientist at NASA that is discussing the \"face\" on mars.\n<class 'collections.Counter'>\nOriginal: I will be explaining how the \"face\" is a land form.\n<class 'collections.Counter'>\nOriginal: By sharing my information about this isue i will tell you just that.\n<class 'collections.Counter'>\nOriginal: First off, how could it be a martions drawing.\n<class 'collections.Counter'>\nOriginal: There is no plant life on mars as of rite now that we know of, which means so far as we know it is not possible for any type of life.\n<class 'collections.Counter'>\nOriginal: That explains how it could not be made by martians.\n<class 'collections.Counter'>\nOriginal: Also why and how would a martion build a face so big.\n<class 'collections.Counter'>\nOriginal: It just does not make any since that a martian did this.\n<class 'collections.Counter'>\nOriginal: Next, why it is a landform.\n<class 'collections.Counter'>\nOriginal: There are many landforms that are weird here in America, and there is also landforms all around the whole Earth.\n<class 'collections.Counter'>\nOriginal: Many of them look like something we can relate to like a snake a turtle a human...\n<class 'collections.Counter'>\nOriginal: So if there are landforms on earth dont you think landforms are on mars to?\n<class 'collections.Counter'>\nOriginal: Of course!\n<class 'collections.Counter'>\nOriginal: why not?\n<class 'collections.Counter'>\nOriginal: It's just unique that the landform on Mars looks like a human face.\n<class 'collections.Counter'>\nOriginal: Also if there was martians and they were trying to get our attention dont you think we would have saw one by now?\n<class 'collections.Counter'>\nOriginal: Finaly, why you should listen to me.\n<class 'collections.Counter'>\nOriginal: You should listen to me because i am a member of NASA and i've been dealing with all of this stuff that were talking about and people who say martians did this have no relation with NASA and have never worked with anything to relate to this landform.\n<class 'collections.Counter'>\nOriginal: One last thing is that everyone working at NASA says the same thing i say, that the \"face\" is just a landform.\n<class 'collections.Counter'>\nOriginal: To sum all this up the \"face\" on mars is a landform but others would like to beleive it's a martian sculpture.\n<class 'collections.Counter'>\nOriginal: Which every one that works at NASA says it's a landform and they are all the ones working on the planet and taking pictures.\n<class 'collections.Counter'>\n00000000000000000000000000000000000000000000000000000000000\n31\n","output_type":"stream"}]},{"cell_type":"code","source":"# Clean the \\n\\n from the full_text columns:\n\ntrain['full_text_clean'] = train['full_text'].replace('\\n\\n', '', regex=True)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:55:50.901493Z","iopub.execute_input":"2024-04-18T08:55:50.901921Z","iopub.status.idle":"2024-04-18T08:55:50.972524Z","shell.execute_reply.started":"2024-04-18T08:55:50.901890Z","shell.execute_reply":"2024-04-18T08:55:50.971670Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"train['full_text_clean'][2]","metadata":{"execution":{"iopub.status.busy":"2024-04-18T08:56:01.155395Z","iopub.execute_input":"2024-04-18T08:56:01.156378Z","iopub.status.idle":"2024-04-18T08:56:01.163266Z","shell.execute_reply.started":"2024-04-18T08:56:01.156345Z","shell.execute_reply":"2024-04-18T08:56:01.162172Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"'People always wish they had the same technology that they have seen in movies, or the best new piece of technology that is all over social media. However, nobody seems to think of the risks that these kinds of new technologies may have. Cars have been around for many decades, and now manufacturers are starting to get on the bandwagon and come up with the new and improved technology that they hope will appeal to everyone. As of right now, it seems as though the negative characteristics of these cars consume the positive idea that these manufacturers have tried to convey.Currently, this new technology in cars has a very long way to go before being completely \"driverless\". Drivers still need to be on alert when they are driving, as well as control the car near any accidents or complicated traffic situations. This seems to totally defeat the purpose of the \"driverless\" car. Eventually the technology may improve, but nobody can be certain that the driverless car will eventually become completely \"driverless\". This idea just seems like a lot of hard work and money for something that is not very neccessary. If someone does not want to drive their car they can just take a city bus or a subway. There are so many options of transportation that can already solve this problem. Even if masnufacturers are trying to make driving more \"fun\", driving is not meant to be \"fun\" it is meant to get people where they need to go. Playing around in a car just to have \"fun\" is just a recipe for disaster.The idea of the driverless car also raises many questions about who will be liable when someone gets into an accident in one of these new cars. Many states do not even let people drive semi-automatic cars because there are not even laws that pertain to the liability of anyone who get into an accident while driving these type of cars. If these cars become more popular, states may pass new laws. However, this topic also raises questions about who is able to dictate whether or not it was the car or the human\\'s fault for an accident. Since this technology is so new, there could be many problems with the car\\'s system that nobody has even discovered since they have not drove the car themselves. If someone test drives this kind of car or even purchases one and they get into a crash not knowing what could possibly happen to them, they will want to sue the car manufacturer since they were not aware of any bugs in the car\\'s system. These lawsuits can add up and eventually the manufactuers will be in a bunch of debt, which could cost them their whole idea of the driverless car.The technology car manufacturers are trying to develope may just be a diasaster in the making. There are many alternative options of transportations if you do not feel like driving yourself, and these options are way less expensive than buying a brand new car. Although this technology is relatively new, we can not be certain that this new idea will even pay off in the end, it may just be a waste of money and time. Sometimes the newest technology is not the most benefical.         '"},"metadata":{}}]},{"cell_type":"code","source":"from collections import Counter\n# Number of the correction\ndef diff(string1, string2):\n    lst1 = string1.split(' ')\n    lst2 =  string2.split(' ')\n    counter1 = Counter(lst1)\n    counter2 = Counter(lst2)\n    diff_counter =  counter1- counter2\n#     print(type(diff_counter))\n    listofwords  = list(diff_counter.elements())\n    return listofwords, len(listofwords)\n\n\ndef mis_cnt(fulltext):\n    number_of_mistake = 0\n    tokenized_fulltext = sent_tokenize(fulltext)\n    for token in tokenized_fulltext:\n    #     print(\"Original:\", x)\n        result = happy_tt.generate_text(\"grammar: \" + token, args=args)\n        corrected_text = result.text\n    #     print(\"Corrected:\", corrected_text)\n\n        # Calculating the difference\n        a,differ = diff(x, corrected_text)\n        number_of_mistake += differ\n    #     print(\"Words changed:\", differ)\n    #     print(a)\n    #     print('00000000000000000000000000000000000000000000000000000000000')\n    return number_of_mistake\n\n","metadata":{"execution":{"iopub.status.busy":"2024-04-18T09:08:46.413502Z","iopub.execute_input":"2024-04-18T09:08:46.413989Z","iopub.status.idle":"2024-04-18T09:08:46.424029Z","shell.execute_reply.started":"2024-04-18T09:08:46.413955Z","shell.execute_reply":"2024-04-18T09:08:46.422737Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"   train['mis_cnt'] = train['full_text'].apply(mis_cnt)","metadata":{"execution":{"iopub.status.busy":"2024-04-18T09:08:48.756725Z","iopub.execute_input":"2024-04-18T09:08:48.757139Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Spelling check","metadata":{}},{"cell_type":"code","source":"from transformers import pipeline\n\nfix_spelling = pipeline(\"text2text-generation\",model=\"oliverguhr/spelling-correction-english-base\")\nfix1 = \"There is no plant life on mars as of rite now that we know of, which means so far as we know it is not possible for any type of life.\"\nfix = fix_spelling(\"There is no plant life on mars as of rite now that we know of, which means so far as we know it is not possible for any type of life.\",max_length=2048)\nprint(fix1)\nprint(fix[0]['generated_text'])\n  ","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from urllib.request import urlopen\nfrom bs4 import BeautifulSoup\n\nurl = \"https://eciuonline-my.sharepoint.com/:w:/r/personal/hamid_omidi_eciu_eu/_layouts/15/Doc.aspx?sourcedoc=%7BE6B7F397-6AA2-4FD5-84E4-4DD8BA24952A%7D&file=Cover%20Letter%201.docx&action=default&mobileredirect=true\"\nhtml = urlopen(url).read()\nsoup = BeautifulSoup(html, features=\"html.parser\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from transformers import pipeline\n\nfix_spelling = pipeline(\"text2text-generation\",model=\"oliverguhr/spelling-correction-english-base\")\n\nprint(fix_spelling(\"There is no plant life on mars as of rite now that we know\",max_length=2048))","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}